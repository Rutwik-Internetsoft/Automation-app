{"uid":"ac4392b25006e132","name":"Validate Total Price Calculation in Cart","fullName":"suits.test_orderflows.test_cash.test_openorder_cash.TestOpenOrderCash#test_cart_calculations","historyId":"8f4a4d4a98e5707da8d3dd39eb99a303","time":{"start":1741862928974,"stop":1741862932736,"duration":3762},"description":"Ensures the total price of the cart items is calculated accurately before payment.","descriptionHtml":"<p>Ensures the total price of the cart items is calculated accurately before payment.</p>\n","status":"failed","statusMessage":"AssertionError: Difference too high: 0.8800000000000097\nassert 0.8800000000000097 <= 0.3\n +  where 0.8800000000000097 = abs((95.93 - 95.05))","statusTrace":"self = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000002AE44F4B5E0>\n\n    @allure.story(\"Billing & Price Calculation\")\n    @allure.title(\"Validate Total Price Calculation in Cart\")\n    @allure.description(\"Ensures the total price of the cart items is calculated accurately before payment.\")\n    def test_cart_calculations(self):\n        global total, tolerance\n        screenshot_path = \"allure-report/screenshots/before_pay.png\"\n        self.driver.get_screenshot_as_file(screenshot_path)\n        allure.attach.file(screenshot_path, name=\"Before Pay Button\", attachment_type=allure.attachment_type.PNG)\n    \n        end_pay = self.calc.pay()\n        tolerance = 0.3\n        total = self.calc.total_calculation()\n        print(f\"The amount on pay button is {end_pay} the final total after calculation is {total}\\n\")\n>       assert abs(total - end_pay) <= tolerance, (f\"Difference too high: {abs(total - end_pay)}\")\nE       AssertionError: Difference too high: 0.8800000000000097\nE       assert 0.8800000000000097 <= 0.3\nE        +  where 0.8800000000000097 = abs((95.93 - 95.05))\n\nsuits\\test_orderflows\\test_cash\\test_openorder_cash.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"appium_driver","time":{"start":1741862860865,"stop":1741862866205,"duration":5340},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login_once","time":{"start":1741862866206,"stop":1741862867524,"duration":1318},"status":"passed","steps":[{"name":"Performing User Login","time":{"start":1741862866345,"stop":1741862867213,"duration":868},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"Entering Passcode","time":{"start":1741862867213,"stop":1741862867521,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"cfb0f09b6fb4938b","name":"Login Info","source":"cfb0f09b6fb4938b.txt","type":"text/plain","size":54}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2},{"name":"capture_screenshot_on_failure","time":{"start":1741862928874,"stop":1741862928874,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"setup_driver","time":{"start":1741862928875,"stop":1741862928973,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"description":"Ensures the total price of the cart items is calculated accurately before payment.","status":"failed","statusMessage":"AssertionError: Difference too high: 0.8800000000000097\nassert 0.8800000000000097 <= 0.3\n +  where 0.8800000000000097 = abs((95.93 - 95.05))","statusTrace":"self = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000002AE44F4B5E0>\n\n    @allure.story(\"Billing & Price Calculation\")\n    @allure.title(\"Validate Total Price Calculation in Cart\")\n    @allure.description(\"Ensures the total price of the cart items is calculated accurately before payment.\")\n    def test_cart_calculations(self):\n        global total, tolerance\n        screenshot_path = \"allure-report/screenshots/before_pay.png\"\n        self.driver.get_screenshot_as_file(screenshot_path)\n        allure.attach.file(screenshot_path, name=\"Before Pay Button\", attachment_type=allure.attachment_type.PNG)\n    \n        end_pay = self.calc.pay()\n        tolerance = 0.3\n        total = self.calc.total_calculation()\n        print(f\"The amount on pay button is {end_pay} the final total after calculation is {total}\\n\")\n>       assert abs(total - end_pay) <= tolerance, (f\"Difference too high: {abs(total - end_pay)}\")\nE       AssertionError: Difference too high: 0.8800000000000097\nE       assert 0.8800000000000097 <= 0.3\nE        +  where 0.8800000000000097 = abs((95.93 - 95.05))\n\nsuits\\test_orderflows\\test_cash\\test_openorder_cash.py:71: AssertionError","steps":[],"attachments":[{"uid":"8c2a7e11c0d04646","name":"Before Pay Button","source":"8c2a7e11c0d04646.png","type":"image/png","size":134754}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"capture_screenshot_on_failure::0","time":{"start":1741862932853,"stop":1741862933366,"duration":513},"status":"passed","steps":[],"attachments":[{"uid":"1c622218a24d0bff","name":"Screenshot_test_cart_calculations","source":"1c622218a24d0bff.png","type":"image/png","size":141218}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"appium_driver::0","time":{"start":1741862968266,"stop":1741862968497,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"Open Order Flow - Cash Payment"},{"name":"Type","value":"Functional Test"},{"name":"story","value":"Billing & Price Calculation"},{"name":"Module","value":"Order Management"},{"name":"parentSuite","value":"suits.test_orderflows.test_cash"},{"name":"suite","value":"test_openorder_cash"},{"name":"subSuite","value":"TestOpenOrderCash"},{"name":"host","value":"LAPTOP-KKMKONCC"},{"name":"thread","value":"6272-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"suits.test_orderflows.test_cash.test_openorder_cash"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ac4392b25006e132.json","parameterValues":[]}