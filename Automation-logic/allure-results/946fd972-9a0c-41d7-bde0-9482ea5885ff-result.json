{"name": "Update Quantity of an Item in the Cart", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /elements...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:79:12)\" == True\n +  where \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /elements...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:79:12)\" = update_item_quantity()\n +    where update_item_quantity = <logic.takeout_logic.Calculations object at 0x000001DFCF130CD0>.update_item_quantity\n +      where <logic.takeout_logic.Calculations object at 0x000001DFCF130CD0> = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000001DFCF1339A0>.calc", "trace": "self = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000001DFCF1339A0>\n\n    @allure.story(\"Item Quantity Management\")\n    @allure.title(\"Update Quantity of an Item in the Cart\")\n    @allure.description(\"Ensures the quantity of an existing item can be updated successfully.\")\n    def test_updating_item(self):\n>       assert self.calc.update_item_quantity() == True\nE       assert \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /elements...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:79:12)\" == True\nE        +  where \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /elements...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:79:12)\" = update_item_quantity()\nE        +    where update_item_quantity = <logic.takeout_logic.Calculations object at 0x000001DFCF130CD0>.update_item_quantity\nE        +      where <logic.takeout_logic.Calculations object at 0x000001DFCF130CD0> = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000001DFCF1339A0>.calc\n\nsuits\\test_orderflows\\test_cash\\test_openorder_cash.py:56: AssertionError"}, "description": "Ensures the quantity of an existing item can be updated successfully.", "start": 1741861961824, "stop": 1741861961837, "uuid": "08262f88-652c-4387-bcf1-2e96dae66c0d", "historyId": "008f632ccc3183ccf9844d0a14bede4e", "testCaseId": "008f632ccc3183ccf9844d0a14bede4e", "fullName": "suits.test_orderflows.test_cash.test_openorder_cash.TestOpenOrderCash#test_updating_item", "labels": [{"name": "story", "value": "Item Quantity Management"}, {"name": "Module", "value": "Order Management"}, {"name": "Type", "value": "Functional Test"}, {"name": "feature", "value": "Open Order Flow - Cash Payment"}, {"name": "parentSuite", "value": "suits.test_orderflows.test_cash"}, {"name": "suite", "value": "test_openorder_cash"}, {"name": "subSuite", "value": "TestOpenOrderCash"}, {"name": "host", "value": "LAPTOP-KKMKONCC"}, {"name": "thread", "value": "9524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "suits.test_orderflows.test_cash.test_openorder_cash"}]}