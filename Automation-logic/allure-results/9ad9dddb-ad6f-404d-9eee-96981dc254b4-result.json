{"name": "Add a Manual Item with Specified Quantity", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /element'...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)\" is True\n +  where \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /element'...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)\" = manual_item()\n +    where manual_item = <logic.takeout_logic.Calculations object at 0x000001DFCF2078E0>.manual_item\n +      where <logic.takeout_logic.Calculations object at 0x000001DFCF2078E0> = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000001DFCF133760>.calc", "trace": "self = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000001DFCF133760>\n\n    @allure.story(\"Manual Item Management\")\n    @allure.title(\"Add a Manual Item with Specified Quantity\")\n    @allure.description(\"Tests if a manual item can be added to the cart with a specified quantity.\")\n    def test_manual_item_and_qty(self):\n>       assert self.calc.manual_item() is True\nE       assert \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /element'...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)\" is True\nE        +  where \"Error is Message: An unknown server-side error occurred while processing the command. Original error: 'POST /element'...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)\" = manual_item()\nE        +    where manual_item = <logic.takeout_logic.Calculations object at 0x000001DFCF2078E0>.manual_item\nE        +      where <logic.takeout_logic.Calculations object at 0x000001DFCF2078E0> = <test_cash.test_openorder_cash.TestOpenOrderCash object at 0x000001DFCF133760>.calc\n\nsuits\\test_orderflows\\test_cash\\test_openorder_cash.py:50: AssertionError"}, "description": "Tests if a manual item can be added to the cart with a specified quantity.", "start": 1741861957084, "stop": 1741861957108, "uuid": "6d1087ad-2f5b-4638-9662-d110639c3de9", "historyId": "ac1f794a1d1088b1f11e8a62fbe508b3", "testCaseId": "ac1f794a1d1088b1f11e8a62fbe508b3", "fullName": "suits.test_orderflows.test_cash.test_openorder_cash.TestOpenOrderCash#test_manual_item_and_qty", "labels": [{"name": "Module", "value": "Order Management"}, {"name": "feature", "value": "Open Order Flow - Cash Payment"}, {"name": "story", "value": "Manual Item Management"}, {"name": "Type", "value": "Functional Test"}, {"name": "parentSuite", "value": "suits.test_orderflows.test_cash"}, {"name": "suite", "value": "test_openorder_cash"}, {"name": "subSuite", "value": "TestOpenOrderCash"}, {"name": "host", "value": "LAPTOP-KKMKONCC"}, {"name": "thread", "value": "9524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "suits.test_orderflows.test_cash.test_openorder_cash"}]}