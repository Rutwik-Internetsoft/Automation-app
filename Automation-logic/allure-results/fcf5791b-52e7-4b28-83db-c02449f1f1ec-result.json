{"name": "Search Existing Customers", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Error is Message: \\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given sear...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)' == True\n +  where 'Error is Message: \\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given sear...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)' = search_cust_phoneorder()\n +    where search_cust_phoneorder = <logic.takeout_logic.Calculations object at 0x000001E7D7838850>.search_cust_phoneorder\n +      where <logic.takeout_logic.Calculations object at 0x000001E7D7838850> = <test_stay_card.TestStayCash object at 0x000001E7D6D3B550>.calc", "trace": "self = <test_stay_card.TestStayCash object at 0x000001E7D6D3B550>\n\n    @allure.story(\"Customer Management\")\n    @allure.title(\"Search Existing Customers\")\n    @allure.description(\"Tests if Existing customer can be added to the POS system.\")\n    def test_adding_existing_customers(self):\n>       assert self.calc.search_cust_phoneorder() == True\nE       AssertionError: assert 'Error is Message: \\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given sear...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)' == True\nE        +  where 'Error is Message: \\nStacktrace:\\nNoSuchElementError: An element could not be located on the page using the given sear...ata\\\\Roaming\\\\npm\\\\node_modules\\\\appium\\\\node_modules\\\\@appium\\\\base-driver\\\\lib\\\\basedriver\\\\commands\\\\find.ts:75:12)' = search_cust_phoneorder()\nE        +    where search_cust_phoneorder = <logic.takeout_logic.Calculations object at 0x000001E7D7838850>.search_cust_phoneorder\nE        +      where <logic.takeout_logic.Calculations object at 0x000001E7D7838850> = <test_stay_card.TestStayCash object at 0x000001E7D6D3B550>.calc\n\nsuits\\test_orderflows\\test_card\\test_stay_card.py:40: AssertionError"}, "description": "Tests if Existing customer can be added to the POS system.", "start": 1741875758907, "stop": 1741875785883, "uuid": "09fdf0a9-e151-44b5-b8e5-51eb270e87dd", "historyId": "af13ce9867fa27acb634452defa2eefd", "testCaseId": "af13ce9867fa27acb634452defa2eefd", "fullName": "suits.test_orderflows.test_card.test_stay_card.TestStayCash#test_adding_existing_customers", "labels": [{"name": "epic", "value": "POS System Automation"}, {"name": "feature", "value": "Stay Card Order"}, {"name": "story", "value": "Customer Management"}, {"name": "parentSuite", "value": "suits.test_orderflows.test_card"}, {"name": "suite", "value": "test_stay_card"}, {"name": "subSuite", "value": "TestStayCash"}, {"name": "host", "value": "LAPTOP-KKMKONCC"}, {"name": "thread", "value": "17376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "suits.test_orderflows.test_card.test_stay_card"}]}