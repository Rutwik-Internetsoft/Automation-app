{"name": "Process a phone order with cash payment and refund", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for -: 'float' and 'type'", "trace": "self = <test_cash.test_phoneorder_cash.TestPhoneOrderCash object at 0x000001D6C800A600>\n\n    @allure.story(\"Phone Order Payment \")\n    @allure.title(\"Process a phone order with cash payment and refund\")\n    def test_phoneorder_cash_payment(self):\n    \n        assert self.phone.order(\"Phone Order\") == True\n        assert self.phone.phone_order() == True\n        assert self.phone.add_multiple_items() is True\n>       assert self.phone.cash_payment() == True\n\nsuits\\test_orderflows\\test_cash\\test_phoneorder_cash.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <logic.takeout_logic.Calculations object at 0x000001D6C8B9DCD0>\n\n    def cash_payment(self):\n        to_pay = self.pay()\n        cash_amount_final = self.cash_amount()\n>       if abs((to_pay)-cash_amount_final)<=0.3:\nE       TypeError: unsupported operand type(s) for -: 'float' and 'type'\n\nlogic\\takeout_logic.py:684: TypeError"}, "start": 1741706981300, "stop": 1741707040401, "uuid": "955efeb5-0185-46bb-8b4c-836ebb3d2215", "historyId": "3478c90b7525cd44e3c607e32a73591e", "testCaseId": "3478c90b7525cd44e3c607e32a73591e", "fullName": "suits.test_orderflows.test_cash.test_phoneorder_cash.TestPhoneOrderCash#test_phoneorder_cash_payment", "labels": [{"name": "story", "value": "Phone Order Payment "}, {"name": "feature", "value": "Sanity Sheet"}, {"name": "parentSuite", "value": "suits.test_orderflows.test_cash"}, {"name": "suite", "value": "test_phoneorder_cash"}, {"name": "subSuite", "value": "TestPhoneOrderCash"}, {"name": "host", "value": "LAPTOP-KKMKONCC"}, {"name": "thread", "value": "27044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "suits.test_orderflows.test_cash.test_phoneorder_cash"}]}