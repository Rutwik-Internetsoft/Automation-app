{"uuid": "8fef93d4-b17c-4777-8dfe-4db598add40b", "children": ["61a65608-a72e-420a-843a-b2512ae047fa"], "befores": [{"name": "capture_android_crash_logs", "status": "passed", "start": 1742478650446, "stop": 1742478650446}], "afters": [{"name": "capture_android_crash_logs::0", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"C:\\Users\\rutwik\\Automation\\Automation-logic\\conftest.py\", line 142, in capture_android_crash_logs\n    logs = get_crash_logs()\n           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\Automation\\Automation-logic\\conftest.py\", line 130, in get_crash_logs\n    logcat_output = subprocess.run(\n                    ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\subprocess.py\", line 550, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\subprocess.py\", line 1209, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\subprocess.py\", line 1626, in _communicate\n    self.stdout_thread.join(self._remaining_time(endtime))\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\threading.py\", line 1147, in join\n    self._wait_for_tstate_lock()\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\threading.py\", line 1167, in _wait_for_tstate_lock\n    if lock.acquire(block, timeout):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1742478660849, "stop": 1742478766874}], "start": 1742478650446, "stop": 1742478766874}