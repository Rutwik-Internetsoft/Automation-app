{"uid":"8c9337a8b63cb2d6","name":"Ensure order type is TAKE OUT","fullName":"suits.test_orderflows.test_card.test_openorder_card.TestOpenOrderCard#test_orderType","historyId":"0f5bfc31dbe8fab06538d52c5a4506a4","time":{"start":1741788570579,"stop":1741788572788,"duration":2209},"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = isOrder('OPEN ORDER')\n +    where isOrder = <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0>.isOrder\n +      where <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0> = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>.calc","statusTrace":"self = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>\n\n    @allure.story(\"Order Type Validation\")\n    @allure.title(\"Ensure order type is TAKE OUT\")\n    def test_orderType(self):\n        with allure.step(\"Validating order type\"):\n>           assert self.calc.isOrder(\"OPEN ORDER\") == True\nE           AssertionError: assert False == True\nE            +  where False = isOrder('OPEN ORDER')\nE            +    where isOrder = <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0>.isOrder\nE            +      where <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0> = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>.calc\n\nsuits\\test_orderflows\\test_card\\test_openorder_card.py:121: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"appium_driver","time":{"start":1741788386083,"stop":1741788391233,"duration":5150},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login_once","time":{"start":1741788391234,"stop":1741788400161,"duration":8927},"status":"passed","steps":[{"name":"Performing User Login","time":{"start":1741788391452,"stop":1741788400159,"duration":8707},"status":"failed","statusMessage":"AssertionError: Login failed.\nassert False is True\n +  where False = login()\n +    where login = <logic.login_logic.Login object at 0x000002D0172843E0>.login\n","statusTrace":"  File \"C:\\Users\\rutwik\\Automation\\conftest.py\", line 72, in login_once\n    assert testLogin.login() is True, \"Login failed.\"\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"capture_screenshot_on_failure","time":{"start":1741788570325,"stop":1741788570325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"setup_driver","time":{"start":1741788570325,"stop":1741788570578,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = isOrder('OPEN ORDER')\n +    where isOrder = <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0>.isOrder\n +      where <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0> = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>.calc","statusTrace":"self = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>\n\n    @allure.story(\"Order Type Validation\")\n    @allure.title(\"Ensure order type is TAKE OUT\")\n    def test_orderType(self):\n        with allure.step(\"Validating order type\"):\n>           assert self.calc.isOrder(\"OPEN ORDER\") == True\nE           AssertionError: assert False == True\nE            +  where False = isOrder('OPEN ORDER')\nE            +    where isOrder = <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0>.isOrder\nE            +      where <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0> = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>.calc\n\nsuits\\test_orderflows\\test_card\\test_openorder_card.py:121: AssertionError","steps":[{"name":"Validating order type","time":{"start":1741788570579,"stop":1741788572787,"duration":2208},"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = isOrder('OPEN ORDER')\n +    where isOrder = <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0>.isOrder\n +      where <logic.takeout_logic.Calculations object at 0x000002D01AEA61E0> = <test_openorder_card.TestOpenOrderCard object at 0x000002D01AD4A480>.calc\n","statusTrace":"  File \"C:\\Users\\rutwik\\Automation\\suits\\test_orderflows\\test_card\\test_openorder_card.py\", line 121, in test_orderType\n    assert self.calc.isOrder(\"OPEN ORDER\") == True\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":1},"afterStages":[{"name":"capture_screenshot_on_failure::0","time":{"start":1741788572815,"stop":1741788573309,"duration":494},"status":"passed","steps":[],"attachments":[{"uid":"7a2b94d0d4efa2a1","name":"Screenshot_test_orderType","source":"7a2b94d0d4efa2a1.png","type":"image/png","size":181159}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"appium_driver::0","time":{"start":1741788622639,"stop":1741788622906,"duration":267},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"OS","value":"Android"},{"name":"App","value":"POS System"},{"name":"feature","value":"Open Order Flow"},{"name":"story","value":"Order Type Validation"},{"name":"parentSuite","value":"suits.test_orderflows.test_card"},{"name":"suite","value":"test_openorder_card"},{"name":"subSuite","value":"TestOpenOrderCard"},{"name":"host","value":"LAPTOP-KKMKONCC"},{"name":"thread","value":"19572-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"suits.test_orderflows.test_card.test_openorder_card"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"8c9337a8b63cb2d6.json","parameterValues":[]}