{"uid":"e2c80b5aa4e31599","name":"Connect PAX Payment Terminal","fullName":"suits.test_orderflows.test_card.test_openorder_card.TestOpenOrderCard#test_pax_connection","historyId":"4b50c441a43d312e06fa3d6f37c6fbee","time":{"start":1741789336275,"stop":1741789337168,"duration":893},"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = connect_PAX()\n +    where connect_PAX = <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60>.connect_PAX\n +      where <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60> = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>.calc","statusTrace":"self = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>\n\n    @allure.story(\"Device Connection\")\n    @allure.title(\"Connect PAX Payment Terminal\")\n    def test_pax_connection(self):\n        with allure.step(\"Connecting to PAX Terminal\"):\n>           assert self.calc.connect_PAX() == True\nE           assert False == True\nE            +  where False = connect_PAX()\nE            +    where connect_PAX = <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60>.connect_PAX\nE            +      where <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60> = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>.calc\n\nsuits\\test_orderflows\\test_card\\test_openorder_card.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"appium_driver","time":{"start":1741789325531,"stop":1741789332015,"duration":6484},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login_once","time":{"start":1741789332015,"stop":1741789336162,"duration":4147},"status":"passed","steps":[{"name":"Performing User Login","time":{"start":1741789332124,"stop":1741789334223,"duration":2099},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"Entering Passcode","time":{"start":1741789334224,"stop":1741789336160,"duration":1936},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"f8afd29f699befdb","name":"Login Info","source":"f8afd29f699befdb.txt","type":"text/plain","size":54}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2},{"name":"capture_screenshot_on_failure","time":{"start":1741789336163,"stop":1741789336163,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"setup_driver","time":{"start":1741789336163,"stop":1741789336274,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = connect_PAX()\n +    where connect_PAX = <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60>.connect_PAX\n +      where <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60> = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>.calc","statusTrace":"self = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>\n\n    @allure.story(\"Device Connection\")\n    @allure.title(\"Connect PAX Payment Terminal\")\n    def test_pax_connection(self):\n        with allure.step(\"Connecting to PAX Terminal\"):\n>           assert self.calc.connect_PAX() == True\nE           assert False == True\nE            +  where False = connect_PAX()\nE            +    where connect_PAX = <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60>.connect_PAX\nE            +      where <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60> = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>.calc\n\nsuits\\test_orderflows\\test_card\\test_openorder_card.py:25: AssertionError","steps":[{"name":"Connecting to PAX Terminal","time":{"start":1741789336275,"stop":1741789337165,"duration":890},"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = connect_PAX()\n +    where connect_PAX = <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60>.connect_PAX\n +      where <logic.takeout_logic.Calculations object at 0x000001EBBEF42F60> = <test_openorder_card.TestOpenOrderCard object at 0x000001EBBC782ED0>.calc\n","statusTrace":"  File \"C:\\Users\\rutwik\\Automation\\suits\\test_orderflows\\test_card\\test_openorder_card.py\", line 25, in test_pax_connection\n    assert self.calc.connect_PAX() == True\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":1},"afterStages":[{"name":"capture_screenshot_on_failure::0","time":{"start":1741789337324,"stop":1741789337338,"duration":14},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\nStacktrace:\nUnknownError: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\n    at UIA2Proxy.command (C:\\Users\\rutwik\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\jsonwp-proxy\\proxy.js:350:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.getScreenshot (C:\\Users\\rutwik\\.appium\\node_modules\\appium-uiautomator2-driver\\lib\\commands\\screenshot.js:42:5)\n","statusTrace":"  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"C:\\Users\\rutwik\\Automation\\conftest.py\", line 100, in capture_screenshot_on_failure\n    appium_driver.get_screenshot_as_file(screenshot_path)  # Take screenshot\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 969, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1003, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1013, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\rutwik\\miniconda3\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 125, in check_response\n    raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"appium_driver::0","time":{"start":1741789337469,"stop":1741789337751,"duration":282},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"App","value":"POS System"},{"name":"feature","value":"Open Order Flow"},{"name":"story","value":"Device Connection"},{"name":"OS","value":"Android"},{"name":"parentSuite","value":"suits.test_orderflows.test_card"},{"name":"suite","value":"test_openorder_card"},{"name":"subSuite","value":"TestOpenOrderCard"},{"name":"host","value":"LAPTOP-KKMKONCC"},{"name":"thread","value":"9440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"suits.test_orderflows.test_card.test_openorder_card"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e2c80b5aa4e31599.json","parameterValues":[]}